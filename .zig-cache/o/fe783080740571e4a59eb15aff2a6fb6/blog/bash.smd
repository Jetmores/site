<!DOCTYPE html>
<html>
  <head id="head">
	<meta charset="UTF-8">
	<title id="title">YuHeng&apos;s blog! - Zine</title>
	<link href="/style.css" rel="stylesheet">
  </head>
<body>
	<nav id="menu" class="centered">
		<a href="/">主页</a>
		<a href="/blog/">日志</a>
		<a href="/sample/">用例</a>
	</nav>
	<h1>shell</h1>
	<div id="content"><h3>gdb tips</h3><p>gdb [OPTIONS] [program [procID or progfile core]] gdb -p pid</p><pre><code class="bash"><span class="constant">info</span> <span class="constant">threads</span>
<span class="constant">thread</span> <span class="constant">id</span>
<span class="comment">#只有当前被调试线程会执行|默认全部执行|当next or step时同on,continue-until-finish等大跳转则全部运行,此时遇到断点(包括另一线程处的断点)则切换为当前线程</span>
<span class="constant">set</span> <span class="constant">scheduler-locking</span> <span class="constant">on</span><span class="operator">|</span><span class="constant">off</span><span class="operator">|</span><span class="constant">step</span>
<span class="comment">#默认,fork之后父子独立://默认追踪父进程//追踪子进程</span>
<span class="constant">detach-on-fork</span> <span class="constant">on</span>;<span class="constant">follow-fork-mode</span> <span class="constant">parent</span>
<span class="constant">detach-on-fork</span> <span class="constant">on</span>;<span class="constant">follow-fork-mode</span> <span class="constant">child</span>
<span class="comment">#fork之后block在该位置://默认追踪父进程,子进程block在fork位置//追踪子进程,父进程block在fork位置</span>
<span class="constant">detach-on-fork</span> <span class="constant">off</span>;<span class="constant">follow-fork-mode</span> <span class="constant">parent</span>
<span class="constant">detach-on-fork</span> <span class="constant">off</span>;<span class="constant">follow-fork-mode</span> <span class="constant">child</span>

<span class="comment">#汇编</span>
<span class="property">disas</span>[semble]
</code></pre>
<h3>valgrind内存泄漏分析</h3><pre><code class="bash"><span class="constant">valgrind</span> <span class="constant">./app</span>
</code></pre>
<h3>perf性能热点分析</h3><pre><code class="bash"><span class="constant">perf</span> <span class="constant">stat</span> <span class="constant">-p</span> <span class="constant">pid</span>
</code></pre>
<h3>sed</h3><pre><code class="bash"><span class="comment"># 执行文件的第5行命令</span>
<span class="constant">sed</span> <span class="constant">-n</span> <span class="constant">&apos;5p&apos;</span> <span class="constant">cmd</span> <span class="operator">|</span><span class="constant">bash</span>
<span class="comment"># 批量查找替换文件内容</span>
<span class="constant">sed</span> <span class="constant">-i</span> <span class="constant">&apos;s/LD_LIBRARY_PATH=./LD_LIBRARY_PATH=.:$LD_LIBRARY_PATH/g&apos;</span> <span class="constant">*.sh</span>
</code></pre>
<h3>gcc/g++</h3><p><a href="https://www.runoob.com/w3cnote/gcc-parameter-detail.html" target="_blank">https://www.runoob.com/w3cnote/gcc-parameter-detail.html</a></p><pre><code class="bash"><span class="comment"># 同时链接动态库(默认)和静态库</span>
<span class="constant">g++</span> <span class="constant">-Wl,-Bstatic</span> <span class="constant">-L.</span> <span class="constant">-lx</span> <span class="constant">-Wl,-Bdynamic</span> <span class="constant">-L.</span> <span class="constant">-ly</span>
<span class="comment"># 生成intel汇编语法</span>
<span class="constant">cc</span> <span class="constant">-S</span> <span class="constant">-masm=intel</span> <span class="constant">add.c</span>
<span class="comment"># Optimization</span>
<span class="constant">-O0:不优化</span>
<span class="constant">-O/-O1/-Og:等价表示,g在1基础上增强debug</span>
<span class="constant">-O2/-Os/-Oz:s和z进一步在2基础上优化大小</span>
<span class="constant">-O3/-Ofast:fast在3基础上优化速度</span>
</code></pre>
<ul><li>编译时链接库需要分为两类:<ol><li>直接引用:被源码中直接调用的库</li><li>间接引用:被调用库的依赖库</li></ol></li><li>-lxxx: 指定具体的库名称,编译时需要显式指定直接引用的库名称</li><li>-L: 指定链接库的位置,编译时需要显式指定直接引用的库位置</li><li>-Wl,-rpath-link: 用于编译时指定间接引用的库位置<br>如果知道所有间接引用的库文件名称,并且不嫌麻烦,也可以用-lxxx显式指定每一个库(不推荐-lxxx)</li><li>-Wl,-rpath: 有两个作用<ol><li>用于编译时指定间接引用的库位置,作用同-Wl,-rpath-link</li><li>用于运行时指定所有引用库的位置,作用同修改环境变量(LD_LIBRARY_PATH),并且库路径引用优先级高于LD_LIBRARY_PATH</li></ol></li><li>使用建议<ol><li>编译命令中使用-Wl,-rpath-link 指定间接引用库位置(编译时),使用-Wl,-rpath 指定引用库位置(运行时)</li><li>-Wl,-rpath-link 在 -Wl,-rpath 前</li></ol></li></ul><h3>快捷拷贝程序依赖的动态库</h3><pre><code class="bash"><span class="constant">ldd</span> <span class="constant">app</span> <span class="operator">|</span><span class="constant">awk</span> <span class="constant">&apos;{print $3}&apos;</span> <span class="operator">|</span><span class="constant">xargs</span> <span class="constant">-i</span> <span class="constant">cp</span> <span class="constant">-L</span> <span class="constant">{}</span> <span class="constant">mdir/</span>
</code></pre>
<h3>ssh</h3><pre><code class="bash"><span class="comment"># 生成.ssh/id_rsa.pub 并且远程添加公钥</span>
<span class="constant">ssh-keygen</span> <span class="constant">-t</span> <span class="constant">rsa</span> <span class="constant">-C</span> <span class="constant">&quot;lets2rs@126.com&quot;</span>
<span class="constant">cat</span> <span class="constant">.ssh/id_rsa.pub</span> <span class="operator">|</span> <span class="constant">ssh</span> <span class="constant">root@47.106.171.40</span> <span class="constant">&quot;cat - &gt;&gt;~/.ssh/authorized_keys&quot;</span>
<span class="comment"># ssh代理连接</span>
<span class="constant">ssh</span> <span class="constant">-v</span> <span class="constant">-i</span> <span class="constant">id_rsa</span> <span class="constant">-oProxyCommand=&quot;ssh -i id_rsa yh@35.75.184.13 -p 10022 -N -W %h:%p&quot;</span> <span class="constant">yh@10.64.4.45</span>
<span class="comment"># ssh免(输入)密码连接</span>
<span class="constant">sshpass</span> <span class="constant">-p</span> <span class="constant">BoyuUbuntu</span> <span class="constant">ssh</span> <span class="constant">boyu@192.168.0.20</span>
</code></pre>
<h3>远程拷贝</h3><pre><code class="bash"><span class="constant">scp</span> <span class="constant">dlib.tar.xz</span> <span class="constant">cat@119.27.182.173:/home/cat/tp</span>
<span class="constant">rsync</span> <span class="constant">--partial</span> <span class="constant">-z</span> <span class="constant">-e</span> <span class="constant">&apos;ssh -v -i id_rsa -oProxyCommand=&quot;ssh -i id_rsa yh@35.75.184.13 -p 10022 -N -W %h:%p&quot;&apos;</span> <span class="constant">mCtrl.tar.xz</span> <span class="constant">yh@10.64.4.45:~</span>
</code></pre>
<h3>测试udp连通性:端口占用-存在即使成功也不起作用的情况</h3><pre><code class="bash"><span class="constant">nc</span> <span class="constant">-vuz</span> <span class="constant">172.18.0.12</span> <span class="constant">36802</span>
</code></pre>
<h3>测试udp连通性:端口占用</h3><pre><code class="bash"><span class="constant">server:nc</span> <span class="constant">-lu</span> <span class="constant">36802</span>
<span class="constant">client:nc</span> <span class="constant">-u</span> <span class="constant">127.0.0.1</span> <span class="constant">36802</span>
</code></pre>
<h3>查看程序占用的ip和端口号</h3><pre><code class="bash"><span class="constant">netstat</span> <span class="constant">-[a</span><span class="operator">|</span><span class="constant">4]pn</span>
</code></pre>
<h3>tcpdump:抓取100源地址和36802的目的端口,tcp/udp用来修饰端口的</h3><pre><code class="bash"><span class="constant">tcpdump</span> <span class="constant">-i</span> <span class="constant">ens5</span> <span class="constant">-An</span> <span class="constant">src</span> <span class="constant">host</span> <span class="constant">10.64.2.100</span> <span class="constant">and</span> <span class="constant">udp</span> <span class="constant">dst</span> <span class="constant">port</span> <span class="constant">36802</span>
</code></pre>
<h3>curl</h3><pre><code class="bash"><span class="comment"># 模拟HTTP请求</span>
<span class="constant">curl</span> <span class="constant">127.0.0.1:9909</span>
<span class="comment"># 下载文件类似wget,加k不进行ssl校验</span>
<span class="constant">curl</span> <span class="constant">-LOk</span> <span class="constant">https://ziglang.org/download/0.11.0/zig-0.11.0.tar.xz</span>
</code></pre>
<h3>ps查看进程</h3><pre><code class="bash"><span class="constant">ps</span> <span class="constant">-ef</span>
<span class="comment"># 查看某进程的线程</span>
<span class="constant">ps</span> <span class="constant">-T</span> <span class="constant">-p</span> <span class="constant">pid</span>
<span class="constant">top</span> <span class="constant">-H</span> <span class="constant">-p</span> <span class="constant">pid</span>
</code></pre>
<h3>kill</h3><pre><code class="bash"><span class="constant">kill</span> <span class="constant">-9</span> <span class="constant">pid</span>
<span class="constant">pkill</span> <span class="constant">-f</span> <span class="constant">marketCtrl</span>
</code></pre>
<h3>git</h3><pre><code class="bash"><span class="comment"># name,email,then need id_rsa for clone in git@</span>
<span class="constant">git</span> <span class="constant">config</span> <span class="constant">--global</span> <span class="constant">-e</span>
<span class="constant">git</span> <span class="constant">config</span> <span class="constant">--global</span> <span class="constant">user.name</span> <span class="constant">&quot;[name]&quot;</span>
<span class="constant">git</span> <span class="constant">config</span> <span class="constant">--global</span> <span class="constant">user.email</span> <span class="constant">&quot;[email address]&quot;</span>
<span class="constant">git</span> <span class="constant">config</span> <span class="constant">--global</span> <span class="constant">core.editor</span> <span class="constant">vi</span>
<span class="constant">git</span> <span class="constant">config</span> <span class="constant">--global</span> <span class="constant">http.sslverify</span> <span class="constant">false</span>
<span class="comment"># 暂存与恢复</span>
<span class="constant">git</span> <span class="constant">stash</span>
<span class="constant">git</span> <span class="constant">stash</span> <span class="constant">pop</span>
<span class="comment"># 丢弃工作区的修改或删除,不含新增或未追踪</span>
<span class="constant">git</span> <span class="constant">checkout</span> <span class="constant">.</span>
<span class="comment"># 删除所有未追踪的文件或目录,保险起见先查即将删除项:git clean -nxdf</span>
<span class="constant">git</span> <span class="constant">clean</span> <span class="constant">-df</span>
<span class="constant">git</span> <span class="constant">clean</span> <span class="constant">-xdf</span>
<span class="comment"># 加入暂存(当前目录不含.xx|当前目录|版本库所有目录)</span>
<span class="constant">git</span> <span class="constant">add</span> <span class="constant">[*</span><span class="operator">|</span><span class="constant">.</span><span class="operator">|</span><span class="constant">-A]</span>
<span class="comment"># 查看pull/push所用协议,更改使ssh密钥起作用</span>
<span class="constant">git</span> <span class="constant">remote</span> <span class="constant">-v</span> 
<span class="constant">git</span> <span class="constant">config</span> <span class="constant">remote.origin.url</span> <span class="constant">git@gitlab.com:lets2rs/helix.git</span>
</code></pre>
<h3>查看log文件</h3><pre><code class="bash"><span class="constant">tail</span> <span class="constant">-f</span> <span class="constant">x.log</span> <span class="comment">#退出ctrl+c</span>
<span class="constant">less</span> <span class="constant">+F</span> <span class="constant">x.log</span> <span class="comment">#退出ctrl+c;q</span>
</code></pre>
</div>
</body>
</html>
